[package]
name = "cmpp"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[[bin]]
name = "cmpp"

[[bin]]
name = "app"

[dependencies]
log = "0.4.21"
env_logger = "0.11.3"
bytes = "1.6.0"
chrono = "0.4.38"
tokio = { version = "1.37.0", features = ["full"] }
tokio-util = { version = "0.7.10", features = ["codec"] }
rsa = "0.9.6"
base64 = "0.22.1"
rand = "0.8.5"
md5 = "0.7.0"


[profile.release]
# 剥离（strip）可执行文件中的调试符号和其他不必要的信息
strip = true
# 使用panic = 'abort'来替换默认的panic处理方式，这样在出现panic时，程序不会进行清理操作，可以减小体积和运行时间
panic = 'abort'
# lto（链接时优化）来进一步减小体积
lto = true      # 链接时优化
# codegen-units : 指定在编译期间生成代码的单元数量。它的值为1，表示只生成一个代码单元。
# 通过减少代码单元的数量，可以提高编译速度和减小最终生成的可执行文件的大小。然而，这可能会导致一些性能损失。
codegen-units = 1
# opt-level : 用于指定优化级别，通常有0、1、2、3、s、z几种。在这里，"z"表示最小化优化，这意味着编译器将尽可能地减小体积，
# 但可能会降低性能。 Debug模式，缺省使用0，Release模式缺省是3。
opt-level = "z"